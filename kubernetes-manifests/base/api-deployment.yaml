apiVersion: apps/v1
kind: Deployment
metadata:
  name: lan-nanny-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lan-nanny-api
  template:
    metadata:
      labels:
        app: lan-nanny-api
    spec:
      imagePullSecrets:
        - name: harbor-registry
      initContainers:
        - name: lan-nanny-migrations
          image: harbor.squid-ink.us/politeauthority/lan-nanny:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: lan-nanny-api-creds
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_PASS
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: LAN_NANNY_ENV
              value: "prod"
          resources:
            requests:
              memory: "250Mi"
              cpu: "200m"
            limits:
              memory: "350Mi"
              cpu: "250m"
          command: ["python3", "/app/lan_nanny/migrations/migrate.py"]
      containers:
        - name: lan-nanny-api
          image: harbor.squid-ink.us/politeauthority/lan-nanny:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: lan-nanny-api-creds
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: DB_PASS
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: LAN_NANNY_ENV
              value: "prod"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: lan-nanny-api-creds
                  key: SECRET_KEY
          resources:
            requests:
              memory: "250Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
