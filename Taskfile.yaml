version: "3"
vars:
  K8S_NS: "lan-nanny"
  K8S_NS_DEV: "lan-nanny-dev"
  K8S_NS_STAGE: "lan-nanny-stage"
  K8S_NS_PROD: "lan-nanny"

tasks:
  build-docker:
    cmds:
      - |
        mkdir docker/build-files
        cp -r src docker/build-files
        cp -r tests docker/build-files
        docker build -t harbor.squid-ink.us/politeauthority/lan-nanny \
          --target dev \
          --build-arg="DOCKER_REGISTRY=harbor.squid-ink.us/docker-hub" \
          --no-cache docker/
        rm -rf docker/build-files
    silent: False

  dev-exec-api:
    cmds:
      - |
        NS=$"{{.K8S_NS_DEV}}"
        POD=$(kubectl get pods -n ${NS} -l app=lan-nanny-api --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo "Execing to pod $POD"
        kubectl exec -n ${NS} -it ${POD} -- sh

  dev-cp-api:
    cmds:
      - |
        NS=$"{{.K8S_NS_DEV}}"
        POD=$(kubectl get pods -l app=lan-nanny-api -n ${NS} --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo "Copying to pod $NS/$POD"
        kubectl cp -n ${NS} -c lan-nanny-api src ${POD}:/work/lan_nanny
        echo "Coppied Polite-Lib source"
        echo "Building"
        kubectl exec -it -n ${NS} ${POD} -- sh -c "cd /work/lan_nanny/src && pip install ."

  dev-exec-scanner:
    cmds:
      - |
        NS=$"{{.K8S_NS_DEV}}"
        POD=$(kubectl get pods -n ${NS} -l app=lan-nanny-scanner --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo "Execing to pod $POD"
        kubectl exec -n ${NS} -it ${POD} -- sh

  dev-cp-scanner:
    cmds:
      - |
        NS=$"{{.K8S_NS_DEV}}"
        POD=$(kubectl get pods -l app=lan-nanny-scanner -n ${NS} --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo "Copying to pod $NS/$POD"
        kubectl cp -n ${NS} -c lan-nanny-scanner src/ ${POD}:/work/lan_nanny/
        echo "Coppied Polite-Lib source"
        echo "Building"
        kubectl exec -it -n ${NS} ${POD} -- sh -c "cd /work/lan_nanny/src && pip install ."

  dev-deploy:
    cmds:
      - |
        kustomize build kubernetes-manifests/envs/dev | kubectl apply -f -


  stage-deploy:
    cmds:
      - |
        kustomize build kubernetes-manifests/envs/stage | kubectl apply -f -

  stage-destroy:
    cmds:
      - |
        NS=$"{{.K8S_NS_DEV}}"
        kubectl delete -n {NS} deployment/lan-nanny-api
        kubectl delete -n {NS} deployment/lan-nanny-scanner

  update-semver:
    cmds:
      - |
        # Read the version number from the file
        set -e
        CURRENT_VERSION=$(<"VERSION")
        IFS='.' read -r major minor patch revision <<< "$CURRENT_VERSION"
        ((revision++))
        NEW_VERSION="$major.$minor.$patch.$revision"

        echo "Updating: $CURRENT_VERSION > $NEW_VERSION"

        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" "VERSION"
        git add VERSION
        rm VERSION.bak
        echo "Updated VERSION"

        # Update Api Version
        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" "src/lan_nanny/api/version.py"
        git add src/lan_nanny/api/version.py
        echo "Updated src/bookmarky/api/version.py"

        # // Update README.md
        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" "README.md"
        git add README.md
        rm README.md.bak
        echo "Updated README.md"

        # // Update pyproject.toml
        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" "src/pyproject.toml"
        git add src/pyproject.toml
        echo "Updated pyproject.toml"

        # Update Kustomize Image Tags
        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" "kubernetes-manifests/envs/dev/kustomization.yaml"
        git add kubernetes-manifests/envs/dev/kustomization.yaml
        rm kubernetes-manifests/envs/dev/kustomization.yaml.bak
        echo "Updated Kustomize Dev"

        KUSTOMIZE_FILE="kubernetes-manifests/envs/stage/kustomization.yaml"
        sed -i.bak "s/$CURRENT_VERSION/$NEW_VERSION/g" $KUSTOMIZE_FILE
        git add $KUSTOMIZE_FILE
        rm KUSTOMIZE_FILE + ".bak"
        echo "Updated Kustomize ${KUSTOMIZE_FILE}"


        echo "Updated $CURRENT_VERSION > $NEW_VERSION"